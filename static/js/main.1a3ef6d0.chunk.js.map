{"version":3,"sources":["Components/DayView/DayView.js","Components/Calendar/Calendar.js","Components/Home/Home.js","Components/Navbar/ScrollToColor.js","Components/Navbar/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","root","minWidth","marginBottom","backgroundColor","title","fontSize","color","pos","DayView","props","classes","dayArray","day","convert","a","conversion","parseInt","substring","console","log","map","event","index","key","className","Card","CardContent","Typography","variant","component","Subject","StartTime","EndTime","Location","Description","dayss","position","left","transform","width","formControl","margin","top","Calendar","getSelectedDay","int","b","setDayLabel","tempPush","iterator","data","length","time","j","Date","parse","getDate","push","setSelectedDate","useState","dayLabel2","setDayLabel2","selectedDay","dayLabel","setData","size","undefined","height","windowSize","setWindowSize","useEffect","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","newWholeJson","getEvents","fetch","response","json","jsonData","events","sort","unix","i","obj","startTime","tStart","tStartFormatted","toISOString","timeEnd","endTime","tEnd","tEndFormatted","newJson","id","name","description","error","message","currentView","selectedDate","readonly","eventSettings","dataSource","services","Day","Week","WorkWeek","Month","Agenda","option","Button","onClick","FormControl","InputLabel","Select","labelId","value","onChange","target","MenuItem","Home","href","ScrollHandler","trigger","useScrollTrigger","disableHysteresis","threshold","React","cloneElement","children","style","transition","boxShadow","padding","navItem","ScrollToColor","paddingBottom","paddingTop","appName","marginRight","float","textDecoration","marginLeft","marginTop","content","bottom","borderBottom","navbar","textAlign","scrollNavbar","profileIcon","toolbarButtons","root1","appName1","navItem1","Navbar","location","home","setHome","handleHome","e","handleLeave","homeState","AppBar","elevation","Toolbar","to","App","exact","path","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.1a3ef6d0.chunk.js","sourcesContent":["import React from 'react';\nimport './DayView.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\n\nconst useStyles = makeStyles({\n    root: {\n      minWidth: 275,\n      marginBottom: 10,\n      backgroundColor: 'royalBlue'\n    },\n    title: {\n      fontSize: 14,\n      color: 'white'\n    },\n    pos: {\n      marginBottom: 12,\n      color: 'white'\n    },\n  });\n\nconst DayView = (props) => {\n\n    const classes = useStyles();\n\n    var dayArray = props.day;\n    console.log(dayArray);\n\n    function convert(a) {\n        var conversion = parseInt(a.substring(0,2));\n        console.log(conversion);\n        if(conversion === 12) {\n            return \"\" + conversion + a.substring(2,5) + \" PM\";\n        }\n        if(conversion > 12) {\n            conversion -= 12;\n            return \"\" + conversion + a.substring(2,5) + \" PM\";\n        } else {\n            return a + \" AM\";\n        }\n    }\n\n    return (\n        <>\n            {dayArray.map((event, index) => (\n                <div key={index} className=\"dayList\">\n                    <Card className={classes.root}>\n                        <CardContent>\n                            <Typography variant=\"h5\" component=\"h2\">\n                                {event.Subject}\n                            </Typography>\n                            <Typography className={classes.pos} color=\"inherit\">\n                                {convert(event.StartTime.substring(11,16))} - {convert(event.EndTime.substring(11,16))}\n                            </Typography>\n                            <Typography className={classes.pos} color=\"inherit\">\n                                {event.Location}\n                            </Typography>\n                            <Typography variant=\"body2\" component=\"p\">\n                                {event.Description}\n                            </Typography>\n                        </CardContent>\n                    </Card>\n                </div>\n            ))}\n        </>\n    )\n};\n\nexport default DayView;","import React, { useEffect, useState } from 'react';\nimport { ScheduleComponent, Day, Week, WorkWeek, Month, Agenda, Inject, ViewsDirective, ViewDirective } from '@syncfusion/ej2-react-schedule';\nimport './Calendar.css';\nimport { Button, InputLabel, MenuItem, FormControl, Select } from '@material-ui/core'\nimport DayView from '../DayView/DayView.js';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    dayss: {\n        color: 'white',\n        position: 'relative',\n        left: '50%',\n        transform: 'translate(-50%, 0)',\n        width: '80%',\n    },\n    formControl: {\n        margin: '5%',\n        width: '80%',\n        position: 'relative',\n        top: 80,\n        left: '45%',\n        transform: 'translate(-50%, 0)',\n\n    }\n});\n\nconst Calendar = (props) => {\n\n    const classes = useStyles();\n\n    function useWindowSize() {\n        const [windowSize, setWindowSize] = useState({\n            width: undefined,\n            height: undefined,\n        });\n\n        useEffect(() => {\n            function handleResize() {\n                setWindowSize({\n                    width: window.innerWidth,\n                    height: window.innerHeight,\n                });\n            }\n            window.addEventListener(\"resize\", handleResize);\n            handleResize();\n            return () => window.removeEventListener(\"resize\", handleResize);\n        }, []);\n        return windowSize;\n    }\n\n    function getSelectedDay(int) {\n        var b = parseInt(int);\n\n        if (b === 7) {\n            setDayLabel(\"Friday - August 7th\");\n        } else if (b === 8) {\n            setDayLabel(\"Saturday - August 8th\");\n        } else if (b === 9) {\n            setDayLabel(\"Sunday - August 9th\");\n        } else if (b === 10) {\n            setDayLabel(\"Monday - August 10th\");\n        } else if (b === 11) {\n            setDayLabel(\"Tuesday - August 11th\");\n        } else if (b === 12) {\n            setDayLabel(\"Wednesday - August 12th\");\n        } else if (b === 13) {\n            setDayLabel(\"Thursday - August 13th\");\n        } else if (b === 14) {\n            setDayLabel(\"Friday - August 14th\");\n        } else if (b === 15) {\n            setDayLabel(\"Saturday - August 15th\");\n        }\n\n        var tempPush = [];\n\n        for (var iterator = 0; iterator < data.length; iterator++) {\n            var time = data[iterator].StartTime;\n            var j = Date.parse(time);\n            var a = new Date(j);\n            var date = a.getDate();\n            if (date === b) {\n                tempPush.push(data[iterator]);\n            }\n        }\n        console.log(tempPush);\n        setSelectedDate(tempPush);\n    }\n\n    const handleChange = (event) => {\n        getSelectedDay(event.target.value);\n        setDayLabel2(event.target.value);\n    };\n\n    const [dayLabel2, setDayLabel2] = useState([]);\n\n    const [selectedDay, setSelectedDate] = useState([]);\n\n    const [dayLabel, setDayLabel] = useState(\"Select a Day\");\n\n    const [data, setData] = useState();\n\n    const size = useWindowSize();\n\n    var newWholeJson = [];\n\n    const getEvents = async () => {\n        try {\n            const response = await fetch(\"https://api.hackillinois.org/event/\");\n            const jsonData = await response.json();\n            console.log(jsonData);\n            jsonData.events.sort(function (a, b) {\n                return a.unix - b.unix;\n            });\n            for (var i = 0; i < jsonData.events.length; i++) {\n                var obj = jsonData.events[i];\n                var time = obj.startTime;\n                time -= 18000;\n                var tStart = new Date(time * 1000);\n                var tStartFormatted = tStart.toISOString();\n                tStartFormatted = tStartFormatted.substring(0, 19);\n                jsonData.events[i].startTime = tStartFormatted;\n                var timeEnd = jsonData.events[i].endTime;\n                timeEnd -= 18000;\n                var tEnd = new Date(timeEnd * 1000);\n                var tEndFormatted = tEnd.toISOString();\n                tEndFormatted = tEndFormatted.substring(0, 19);\n                jsonData.events[i].endTime = tEndFormatted;\n            }\n            var json = jsonData.events;\n            for (var j = 0; j < json.length; j++) {\n                var newJson = {\n                    \"Id\": json[j].id,\n                    \"Subject\": json[j].name,\n                    \"Description\": json[j].description,\n                    \"StartTime\": json[j].startTime,\n                    \"EndTime\": json[j].endTime,\n                    \"Location\": \"Online\"\n                }\n                newWholeJson.push(newJson);\n            }\n            console.log(newWholeJson);\n            setData(newWholeJson);\n            console.log(data);\n        } catch (err) {\n            console.error(err.message);\n        }\n    }\n\n    useEffect(() => {\n        getEvents();\n        // eslint-disable-next-line\n    }, []);\n\n    return (\n        <>\n            {(size.width > 800) ? (\n                <div>\n                    <div className=\"calendar\">\n                        <h1>HackIllinois Schedule</h1>\n                        <ScheduleComponent height=\"550px\" currentView=\"Week\" selectedDate={new Date(2020, 7, 7)} readonly=\"true\" eventSettings={{ dataSource: data }}>\n                            <Inject services={[Day, Week, WorkWeek, Month, Agenda]} />\n                            <ViewsDirective>\n                                <ViewDirective option='Day' />\n                                <ViewDirective option='Week' />\n                            </ViewsDirective>\n                        </ScheduleComponent>\n                        <ExpandMoreIcon className=\"arrow2\" fontSize=\"large\" color=\"inherit\" />\n                        <h1>Day-by-Day Schedule</h1>\n                    </div>\n                    <div className=\"below2\">\n                        <Button onClick={() => getSelectedDay(7)} color=\"inherit\" className={classes.dayss} size=\"large\">Friday - August 7th</Button>\n                        <Button onClick={() => getSelectedDay(8)} color=\"inherit\" className={classes.dayss} size=\"large\">Saturday - August 8th</Button>\n                        <Button onClick={() => getSelectedDay(9)} className={classes.dayss} size=\"large\">Sunday - August 9th</Button>\n                        <Button onClick={() => getSelectedDay(10)} className={classes.dayss} size=\"large\">Monday - August 10th</Button>\n                        <Button onClick={() => getSelectedDay(11)} className={classes.dayss} size=\"large\">Tuesday - August 11th</Button>\n                        <Button onClick={() => getSelectedDay(12)} className={classes.dayss} size=\"large\">Wednesday - August 12th</Button>\n                        <Button onClick={() => getSelectedDay(13)} className={classes.dayss} size=\"large\">Thursday - August 13th</Button>\n                        <Button onClick={() => getSelectedDay(14)} className={classes.dayss} size=\"large\">Friday - August 14th</Button>\n                        <Button onClick={() => getSelectedDay(15)} className={classes.dayss} size=\"large\">Saturday - August 15th</Button>\n                    </div>\n                    <div className=\"below3\">\n                        <h2>{dayLabel}</h2>\n                        <DayView day={selectedDay} />\n                    </div>\n                </div>\n            ) :\n                (\n                    <div>\n                        <div className=\"calendar\">\n                            <h1 className=\"mobile\">HackIllinois Schedule</h1>\n                            <ScheduleComponent height=\"550px\" currentView=\"Day\" selectedDate={new Date(2020, 7, 7)} readonly=\"true\" eventSettings={{ dataSource: data }}>\n                                <Inject services={[Day, Week, WorkWeek, Month, Agenda]} />\n                                <ViewsDirective>\n                                    <ViewDirective option='Day' />\n                                    <ViewDirective option='Week' />\n                                </ViewsDirective>\n                            </ScheduleComponent>\n                        </div>\n                        <div className=\"belowMobile\">\n                            <FormControl className={classes.formControl} color=\"primary\">\n                                <InputLabel id=\"demo-simple-select-label\">Day</InputLabel>\n                                <Select\n                                    labelId=\"demo-simple-select-label\"\n                                    id=\"demo-simple-select\"\n                                    value={dayLabel2}\n                                    onChange={handleChange}>\n                                    <MenuItem value={7}>Friday - August 7th</MenuItem>\n                                    <MenuItem value={8}>Saturday - August 8th</MenuItem>\n                                    <MenuItem value={9}>Sunday - August 9th</MenuItem>\n                                    <MenuItem value={10}>Monday - August 10th</MenuItem>\n                                    <MenuItem value={11}>Tuesday - August 11th</MenuItem>\n                                    <MenuItem value={12}>Wednesday - August 12th</MenuItem>\n                                    <MenuItem value={13}>Thursday - August 13th</MenuItem>\n                                    <MenuItem value={14}>Friday - August 14th</MenuItem>\n                                    <MenuItem value={15}>Saturday - August 15th</MenuItem>\n                                </Select>\n                            </FormControl>\n                        </div>\n                        <div className=\"belowDayView\">\n                            <DayView day={selectedDay} />\n                        </div>\n                    </div>\n                )}\n        </>\n\n    )\n};\n\nexport default Calendar;","import React from 'react';\nimport './Home.css';\nimport Button from '@material-ui/core/Button';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\n\nconst Home = (props) => {\n  return (\n    <>\n      <div className=\"root\">\n        <h1>Welcome to HackIllinois!</h1>\n        <div className=\"makeBig\">\n          <ExpandMoreIcon className=\"arrow\" fontSize=\"large\" color=\"inherit\"/>\n        </div>\n        <div className=\"below\">\n          <div className=\"about\">\n            <div className=\"aboutH\">About</div>\n            <div className=\"aboutP\">This is my React Project for the HackIllinois Systems Front-End Challenge. I have utilized the HackIllinois API to have a schedule prepared with all the listed events. You can reach the schedule using the NavBar, or just with the link below. Enjoy!</div>\n            <Button className=\"button\" variant=\"contained\" color=\"primary\" href=\"/HackIllinoisChallenge/schedule\">View Schedule</Button>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n};\n\nexport default Home;","import React from \"react\";\nimport { useScrollTrigger } from \"@material-ui/core\";\n\nconst ScrollHandler = props => {\n  const trigger = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 15,\n    target: props.window ? window() : undefined\n  });\n\n  return React.cloneElement(props.children, {\n    \n    style: {\n      height: '15%',\n      backgroundColor: trigger ? \"orange\" : \"transparent\",\n      color: trigger ? \"white\" : \"black\",\n      transition: trigger ? \"0.3s\" : \"0.5s\",\n      boxShadow: \"none\",\n      padding: \"10px 0px\",\n\n    },\n          navItem: {\n            color: trigger ? \"white\" : \"black\",\n          }\n\n  });\n};\n\nconst ScrollToColor = props => {\n  return <ScrollHandler {...props}>{props.children}</ScrollHandler>;\n};\n\nexport default ScrollToColor;","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport { AppBar, Toolbar} from '@material-ui/core';\nimport ScrollToColor from \"./ScrollToColor\";\nimport './Navbar.css';\n\n\nconst useStyles = makeStyles({\n    root: {\n        backgroundColor: 'orange',\n        paddingBottom: '85px',\n        paddingTop: '0px',\n        position: 'fixed',\n        width: '100%',\n        height: '0%',\n    },\n    appName: {\n        marginRight: '100vh',\n        fontSize: '40px',\n        position: 'relative',\n        float: 'left',\n        textDecoration: 'none',\n        color: 'white',\n        marginLeft: '45px'\n    },\n    navItem: {\n        textDecoration: 'none',\n        marginRight: '40px',\n        marginTop: '10px',\n        fontSize: '18px',\n        position: 'relative',\n        float: 'right',\n        color: 'white',\n        paddingBottom: '5px',\n        '&:after': {\n            content: '\"\"',\n            position: 'absolute',\n            bottom: '0',\n            left: '0',\n            height: '0',\n            width: '0%',\n            borderBottom: '2px solid white',\n            transition: 'width 0.3s ease',\n        },\n        '&:hover:after': {\n            width: '100%',\n        }\n    },\n    navbar: {\n        margin: 'auto',\n        textAlign: 'center',\n        paddingTop: '10px',\n        color: 'white',\n        textDecoration: 'none',\n    },\n    scrollNavbar: {\n        paddingTop: '50px',\n        paddingBottom: '20px',\n    },\n    profileIcon: {\n        fontSize: '30px',\n        // marginTop: '10px',\n        marginRight: '5px',\n    },\n    toolbarButtons: {\n        float: 'left',\n    },\n    root1: {\n        backgroundColor: 'orange',\n        paddingBottom: '20px',\n        paddingTop: '25px',\n        position: '-webkit-sticky',\n        width: '100%',\n        height: '15%',\n    },\n    appName1: {\n        marginRight: '100vh',\n        fontSize: '40px',\n        position: 'relative',\n        float: 'left',\n        textDecoration: 'none',\n        color: 'white',\n        marginLeft: '45px'\n    },\n    navItem1: {\n        textDecoration: 'none',\n        marginRight: '40px',\n        marginTop: '10px',\n        fontSize: '18px',\n        position: 'relative',\n        float: 'right',\n        color: 'white',\n        paddingBottom: '5px',\n        '&:after': {\n            content: '\"\"',\n            position: 'absolute',\n            bottom: '0',\n            left: '0',\n            height: '0',\n            width: '0%',\n            borderBottom: '2px solid white',\n            transition: 'width 0.3s ease',\n        },\n        '&:hover:after': {\n            width: '100%',\n        }\n    }\n});\n\n\nconst Navbar = (props) => {\n    const classes = useStyles();\n    const [home, setHome] = useState(window.location.href.length < 50);\n\n    const handleHome = e => {\n        setHome(true)\n    }\n\n    const handleLeave = e => {\n        setHome(false);\n    }\n\n    return (\n        <div>\n            {home ? (\n                <ScrollToColor homeState={home}>\n                    <AppBar elevation={0} className={classes.root} id=\"root\">\n                        <Toolbar className={classes.navbar}>\n                            <Link onClick={handleHome} className={classes.appName} to=\"/HackIllinoisChallenge\">HackIllinois</Link>\n                            <Link onClick={handleLeave} className={classes.navItem} to=\"/HackIllinoisChallenge/schedule\">Schedule</Link>\n                        </Toolbar>\n                    </AppBar>\n                </ScrollToColor>\n            ) : (\n                    <AppBar elevation={0} className={classes.root1}>\n                        <Toolbar className={classes.navbar}>\n                            <Link onClick={handleHome} className={classes.appName1} to=\"/HackIllinoisChallenge\">HackIllinois</Link>\n                            <Link onClick={handleLeave} className={classes.navItem1} to=\"/HackIllinoisChallenge/schedule\">Schedule</Link>\n                        </Toolbar>\n                    </AppBar>\n                )}\n\n        </div>\n\n    );\n}\n\n\nexport default Navbar;","import React from 'react';\nimport './App.css';\nimport classes from './App.css';\nimport Calendar from './Components/Calendar/Calendar.js';\nimport Home from './Components/Home/Home.js';\nimport Navbar from './Components/Navbar/Navbar.js';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <div>\n    <Router>\n      <Navbar />\n      <Switch>\n        <div className={classes.root}>\n          <Route exact path=\"/HackIllinoisChallenge\"><Home /></Route>\n          <Route path=\"/HackIllinoisChallenge/schedule\"><Calendar /></Route>\n        </div>\n      </Switch>\n    </Router>\n    </div>\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}